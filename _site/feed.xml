<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-11-09T13:38:19-08:00</updated><id>http://localhost:4000//</id><title type="html">Brandon McKinzie</title><subtitle>Testing, testing, one two three.</subtitle><entry><title type="html">Virtual Reality at MIT</title><link href="http://localhost:4000/virtual-reality/" rel="alternate" type="text/html" title="Virtual Reality at MIT" /><published>2016-11-07T00:00:00-08:00</published><updated>2016-11-07T00:00:00-08:00</updated><id>http://localhost:4000/virtual-reality</id><content type="html" xml:base="http://localhost:4000/virtual-reality/">&lt;h1 id=&quot;when-learning-is-too-dangerous&quot;&gt;When Learning Is Too Dangerous&lt;/h1&gt;

&lt;p&gt;Have you ever dreamed of learning a new skill, but you were afraid you might &lt;em&gt;die&lt;/em&gt;? That’s how I felt when I used to dream about
juggling. Yes, tossing any imaginable assortment of objects into the air and be the commander of their trajectory. But alas, all
my years studying physics had ingrained in me a fear of accelerating objects and their devastating effects. I was afraid.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;. . . until I found &lt;em&gt;virtual reality&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;virtual-training-environments&quot;&gt;Virtual Training Environments&lt;/h2&gt;

&lt;p&gt;A hot topic in the current VR research community is creating virtual spaces that allow one to freely experiment and learn new
skills. The options are without bound. My fear of large quantities of small objects falling from the sky prevented me from
exploring the world of juggling. But that is history now, as you can see by my smiling face in the video below.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/d3oBv4xtSms&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Here is what’s going on:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hardware/Software Overview&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This project was written in the Unity3D game engine.&lt;/li&gt;
  &lt;li&gt;The programs responsible for translating my movements were written in the C# programming language. The primary libraries used were Unity’s framework (of course) and the SteamVR Unity plugin’s library for interfacing with the HTC Vive.&lt;/li&gt;
  &lt;li&gt;The thing blocking my eyes is the &lt;strong&gt;HTC Vive&lt;/strong&gt;, which allows me to enter virtual worlds after I create them.&lt;/li&gt;
  &lt;li&gt;Attached to my arms are a total of four &lt;strong&gt;Inertial Measurement Units (IMU).&lt;/strong&gt; Their job is to provide spatial orientation information. Each arm has two IMU’s and an &lt;strong&gt;Arduino&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Each hand has &lt;strong&gt;bend sensors&lt;/strong&gt; on the fingers. (well, only one finger per hand in this video. That’s what I get for only taking one video before the project was finished)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Watch the Laptop Screen&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Even with the professional quality video, it may be hard to see what is going on. As far as I’m aware (in the video), I am a robot in a strange world of floating red balls. Furthermore, the red balls become green when a grab them with my new virtual
  hands. I’m able to pick them up and toss them around &lt;strong&gt;without needing to hold a controller&lt;/strong&gt;. I can see my virtual body, my
  virtual arms, and my virtual hands move exactly as I do. I could not tell you the number of times I hit the walls of that
  office while juggling in my virtual world (enough).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;modeling-experience&quot;&gt;Modeling Experience&lt;/h2&gt;

&lt;figure class=&quot;third&quot;&gt;
    
    &lt;a href=&quot;http://i.imgur.com/MJqBSs1.jpg&quot;&gt;&lt;img src=&quot;http://i.imgur.com/MJqBSs1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;a href=&quot;http://i.imgur.com/fd73lOW.jpg&quot;&gt;&lt;img src=&quot;http://i.imgur.com/fd73lOW.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;a href=&quot;http://i.imgur.com/dx4xm93.jpg&quot;&gt;&lt;img src=&quot;http://i.imgur.com/dx4xm93.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;a href=&quot;http://i.imgur.com/l8HTSub.jpg&quot;&gt;&lt;img src=&quot;http://i.imgur.com/l8HTSub.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;Professional Photoshoot&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;TIL&lt;/strong&gt; Markdown’s bulleted lists hate me. :(&lt;/p&gt;</content><category term="jekyll" /><category term="moon" /><category term="blog" /><category term="about" /><category term="theme" /><summary type="html">The journey of a young man learning to juggle in a virtual world.</summary></entry><entry><title type="html">My First Post</title><link href="http://localhost:4000/my-first-post/" rel="alternate" type="text/html" title="My First Post" /><published>2016-11-07T00:00:00-08:00</published><updated>2016-11-07T00:00:00-08:00</updated><id>http://localhost:4000/my-first-post</id><content type="html" xml:base="http://localhost:4000/my-first-post/">&lt;h1 id=&quot;learning-new-software&quot;&gt;Learning New Software&lt;/h1&gt;

&lt;p&gt;I find myself doing this often. One good example is right now. The Jekyll documentation is decent . . . I suppose. Nonetheless, it
is not “obvious” by any means how this all works together, nor is it clear to me where to find much of the answers. My approach:
just keep typing stuff in different files until things start to work. In this post, let’s take a journey through my confusion!&lt;/p&gt;

&lt;h3 id=&quot;what-is-all-this-stuff&quot;&gt;What is all this stuff?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/butterRobot.jpg&quot; alt=&quot;pic&quot; class=&quot;image-right&quot; height=&quot;10px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;was&lt;/em&gt; going to show a snippet of code below of some confusing jekyll-infused html, but apparently jekyll reads the snippet and
actually tries executing it. Sorry to let you, my imaginary reader, down. Hopefully this code snippet below that came with the
theme will cheer you up. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Wait, I need to type just a little more text to provide room for the code snippet. Of course, I could customize the appropriate
CSS file to resize the image, or I could even go brute force and just write the html img element in the poor markdown file. But we
all know that is not okay. Thus, I type.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-success&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Success Button&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;On the internet, no one knows you’re a robot that passes butter.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;some-of-my-current-projects&quot;&gt;Some of my Current Projects&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;This website.&lt;/li&gt;
  &lt;li&gt;Creating a sentient deep neural network to pass my butter.
    &lt;ol&gt;
      &lt;li&gt;&lt;del&gt;and take over the planet.&lt;/del&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;picture-of-dogs&quot;&gt;Picture of Dogs&lt;/h3&gt;

&lt;div&gt;&lt;a href=&quot;http://localhost:4000/assets/img/doggo.jpg&quot; class=&quot;btn&quot;&gt;Dog&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://localhost:4000/assets/img/doggo2.jpg&quot; class=&quot;btn btn-success&quot;&gt;Dog&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://localhost:4000/assets/img/doggo3.jpg&quot; class=&quot;btn btn-warning&quot;&gt;Dog&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://localhost:4000/assets/img/doggo4.jpg&quot; class=&quot;btn btn-danger&quot;&gt;Dog&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://localhost:4000/assets/img/tiger_one.jpg&quot; class=&quot;btn btn-info&quot;&gt;Cat?&lt;/a&gt;&lt;/div&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;TODO&lt;/strong&gt; Write more amazing posts.&lt;/p&gt;</content><category term="markdown" /><category term="jekyll" /><category term="test" /><summary type="html">Me testing out the functionality of Jekyll.</summary></entry><entry><title type="html">Designing an Event Generator</title><link href="http://localhost:4000/event-generator/" rel="alternate" type="text/html" title="Designing an Event Generator" /><published>2016-08-27T00:00:00-07:00</published><updated>2016-08-27T00:00:00-07:00</updated><id>http://localhost:4000/event-generator</id><content type="html" xml:base="http://localhost:4000/event-generator/">&lt;h2 id=&quot;user-friendly-particle-physics&quot;&gt;User-Friendly Particle Physics&lt;/h2&gt;

&lt;p&gt;One approach to analyzing the huge swaths of data at the Large Hadron Collider is by comparing experimental results with
simulations. If you can reproduce piece-by-piece the observed data by writing simulations, your analysis gains some credibility.
In general, simulations are great testing grounds for ideas that people may have but can’t exactly prove with pen and paper
calculations.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is &lt;strong&gt;a lot&lt;/strong&gt; of “wheel-reinventing” going on in the experimental physics community. Although there are
certainly great libraries that have gained widespread use like ROOT, PYTHIA, and FastJet, these libraries are more
general-purpose.&lt;/p&gt;

&lt;p&gt;Below is a code snippet from a much larger project of mine that sought to bring a more natural interface to the process of event
generation. The initial aim of the project was to write specific simulations for a single dataset recently published by the ALICE
collaboration. It turned out to be a great opportunity to write a small simulation framework for creating and analyzing particle
collision events, particularly events containing &lt;strong&gt;jets&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToyModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nEvents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Float_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; ======================================================================  &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;                    BEGINNING TOYMODEL SIMULATION.                       &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; 
         &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; NUMBER OF EVENTS: &quot;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nEvents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;                                    &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; INPUT JET RADIUS: &quot;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;                                    &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; IN DEBUGGING MODE:&quot;&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boolalpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; ======================================================================    &quot;&lt;/span&gt; 
         &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* ------------------------------------------------ *
     * Object Declarations.                             *
     * ------------------------------------------------ */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EventGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventGenerator&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MyJetFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jetFinder&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyJetFinder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* ------------------------------------------------ *
     * Data Generation/Simulation.                      *
     * ------------------------------------------------ */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Print progress updates.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Percent Complete: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;nEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
            &lt;span class=&quot;c1&quot;&gt;// Defined event centrality (and thus multiplicity).
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;eventGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetCentrality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Cent = 2.5% is lowest available data point. 
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Number of particles generated: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetMultiplicity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    
            &lt;span class=&quot;c1&quot;&gt;// Generate specified number/types of particles.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;eventGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bkg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetMultiplicity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;Printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Number of reconstructed particles: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRecoMult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    
            &lt;span class=&quot;c1&quot;&gt;// Use ClusterSequence to get list of jets in this event.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;jetFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FindJets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eventGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetLastEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Number of jets found: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jetFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetNumJets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    
            &lt;span class=&quot;n&quot;&gt;jetFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p class=&quot;notice&quot;&gt;This page is still under construction. Stay tuned . . .&lt;/p&gt;</content><category term="Brandon McKinzie" /><category term="C++" /><category term="LHC" /><category term="physics" /><summary type="html">Simuling particle collisions for the ALICE collaboration at the Large Hadron Collider.</summary></entry></feed>
